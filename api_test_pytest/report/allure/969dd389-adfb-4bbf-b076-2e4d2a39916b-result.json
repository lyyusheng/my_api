{"name": "test_register[case1]", "status": "broken", "statusDetails": {"message": "PermissionError: [Errno 13] Permission denied: 'F:\\\\BaiduNetdiskWorkspace\\\\api_test_pytest\\\\test_result\\\\test.log'", "trace": "self = <api_test_pytest.test_case.test_register.TestCase object at 0x00000209367133D0>\ncase = {'ActualResult': '{\"status\":0,\"code\":\"20103\",\"data\":null,\"msg\":\"手机号不能为空\"}', 'CaseId': 2, 'ExpectedResult': '{\"status\":0,\"code\":\"20103\",\"data\":null,\"msg\":\"手机号不能为空\"}', 'Method': 'GET', ...}\nregister_setup = <common.do_excel.DoExcel object at 0x00000209367F55E0>\n\n    @pytest.mark.register\n    @pytest.mark.all\n    @pytest.mark.parametrize(\"case\", test_data)\n    def test_register(self, case, register_setup):\n        t = register_setup\n        method = case['Method']\n        url = case['Url']\n        param = eval(case['Params'])  # 讀出來是個字符串，必須eval()變回原來字典類型\n        my_log.info('-----正在测试{}模块里面第{}条测试用例：{},'.format(case['Module'], case['CaseId'], case['Title']))\n        my_log.info('测试数据是：{}'.format(case['Params']))\n        res = HttpRequest().http_request(method, url, param, cookies=None)\n        try:\n            # self.assertEqual(case[\"ExpectedResult\"], res.text)\n            assert (json.loads(case[\"ExpectedResult\"]) == res.json())\n            test_result = \"Pass\"\n        except Exception as e:\n            my_log.error(\"http请求出错了，错误是：{}\".format(e))\n            test_result = \"Failed\"\n            raise e  # 抛出错误，否则测试报告那里全部都是通过\n        finally:\n            t.write_back(case['CaseId'] + 1, 9, res.text)  # 写回实际结果字符串类型不能用json，参数：行 列 实际结果\n            t.write_back(case['CaseId'] + 1, 10, test_result)\n>       my_log.info('实际结果是:{}'.format(res.json()))\n\ntest_case\\test_register.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon\\my_log.py:44: in info\n    self.my_log('INFO', msg)\ncommon\\my_log.py:18: in my_log\n    fh = logging.FileHandler(project_path.log_path, encoding='utf-8')  # 文件不存在时自动生成\nE:\\Program Files\\Python38\\lib\\logging\\__init__.py:1143: in __init__\n    StreamHandler.__init__(self, self._open())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[AttributeError(\"'FileHandler' object has no attribute 'level'\") raised in repr()] FileHandler object at 0x20936622100>\n\n    def _open(self):\n        \"\"\"\n        Open the current base file with the (original) mode and encoding.\n        Return the resulting stream.\n        \"\"\"\n>       return open(self.baseFilename, self.mode, encoding=self.encoding)\nE       PermissionError: [Errno 13] Permission denied: 'F:\\\\BaiduNetdiskWorkspace\\\\api_test_pytest\\\\test_result\\\\test.log'\n\nE:\\Program Files\\Python38\\lib\\logging\\__init__.py:1172: PermissionError"}, "attachments": [{"name": "log", "source": "43302e4d-29e6-47bf-a74a-7626c37b0c8e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'CaseId': 2, 'Module': 'register', 'Title': '不输入手机号', 'Method': 'GET', 'Url': 'http://192.168.153.129:8080/futureloan/mvc/api/member/register', 'Params': \"{'mobilephone':'','pwd':'12345679'}\", 'sql': None, 'ExpectedResult': '{\"status\":0,\"code\":\"20103\",\"data\":null,\"msg\":\"手机号不能为空\"}', 'ActualResult': '{\"status\":0,\"code\":\"20103\",\"data\":null,\"msg\":\"手机号不能为空\"}'}"}], "start": 1626701994473, "stop": 1626701994668, "uuid": "6a2798be-1ea4-47ad-b95c-48b4ee90bec3", "historyId": "e3987f16e6d32dab4d59545c0ef60ed1", "testCaseId": "47d4aefd9d81372254277d35e1a681c5", "fullName": "test_case.test_register.TestCase#test_register", "labels": [{"name": "tag", "value": "all"}, {"name": "tag", "value": "register"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "DESKTOP-IFMHOGL"}, {"name": "thread", "value": "17364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_register"}]}